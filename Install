#!/bin/sh
#
# Installation script for the genemodelload product
#
###########################################################################

cd `dirname $0`

COMMON_CONFIG=genemodel_common.config
PROVIDER_CONFIGS="genemodel_ensembl.config genemodel_ncbi.config genemodel_vega.config"

#
#  Function called when the install fails.
#
installFailed ()
{
    echo "Installation Failed: `date`"
    exit 1
}


#
# Make sure all the configuration files exist.
#
for i in ${COMMON_CONFIG} ${PROVIDER_CONFIGS}
do
    if [ ! -r ${i} ]
    then
        echo "Missing configuration file: ${i}"
        installFailed
    fi
done

#
# Source the common configuration file.
#
. ${COMMON_CONFIG}

#
# Check to see if this is a development installation.
#
DEV=""
if [ "${INSTALL_TYPE}" = "dev" ]
then
    DEV="-d"
fi

#
# Run the DLAInstall.
#
${DLAINSTALL} ${DEV}

#
# The DLAInstall script removes all permissions from shell scripts for
# group "other" on non-development servers. The gene model QC report wrapper
# script needs to have permissions restored on hobbiton to allow the
# curation staff to run it.
#
if [ ${SERVER_NAME} = "hobbiton" ]
then
    chmod -f 755 ${GENEMODEL_QC_SH}
fi

#
# Create the input directory.
#
if [ ! -d ${INPUTDIR} ]
then
    mkdir -p ${INPUTDIR}
fi

#
# Handle installation tasks specific to each provider.
#
for i in ${PROVIDER_CONFIGS}
do
    #
    # Source the provider configuration file.
    #
    . ${i}

    #
    # If this installation is being done on lindon, create symbolic links to
    # the current gene model file and association file on hobbiton from the
    # input directory. This is where the load will look for both files.
    #
    if [ ${SERVER_NAME} = "lindon" ]
    then
        rm -f ${GM_FILE_DEFAULT}
        ln -s /hobbiton${GM_FILE_CURRENT} ${GM_FILE_DEFAULT}

        rm -f ${ASSOC_FILE_DEFAULT}
        ln -s /hobbiton${ASSOC_FILE_DEFAULT} ${ASSOC_FILE_DEFAULT}

	rm -rf ${BIOTYPE_FILE_DEFAULT}
	ln -s /hobbiton${BIOTYPE_FILE_CURRENT} ${BIOTYPE_FILE_DEFAULT}

        rm -rf ${TRANSCRIPT_FILE_DEFAULT}
        ln -s /hobbiton${TRANSCRIPT_FILE_CURRENT} ${TRANSCRIPT_FILE_DEFAULT}

        rm -rf ${PROTEIN_FILE_DEFAULT}
        ln -s /hobbiton${PROTEIN_FILE_CURRENT} ${PROTEIN_FILE_DEFAULT}
    fi

    #
    # If this installation is being done on hobbiton and the association
    # file does not exist already, create one that is writable.
    #
    if [ ${SERVER_NAME} = "hobbiton" ]
    then
        if [ ! -f ${ASSOC_FILE_DEFAULT} ]
        then
	    echo "Creating ${ASSOC_FILE_DEFAULT}"
            touch ${ASSOC_FILE_DEFAULT}
            chmod 664 ${ASSOC_FILE_DEFAULT}
            chgrp mgi ${ASSOC_FILE_DEFAULT}
        fi
    fi
done

#
# If this installation is being done on lindon, the input directory should
# be locked down to protect the symbolic links that were created there.
#
if [ ${SERVER_NAME} = "lindon" ]
then
    chmod -f 755 ${INPUTDIR}
fi

#
# If this installation is being done on hobbiton, the input directory should
# be opened up to allow the curation staff to publish new association files.
#
if [ ${SERVER_NAME} = "hobbiton" ]
then
    chmod -f 775 ${INPUTDIR}
    chgrp mgi ${INPUTDIR}
fi

exit 0
